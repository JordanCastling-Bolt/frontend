{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Invalid username \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Invalid password \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(authservice, router) {\n    this.authservice = authservice;\n    this.router = router;\n    // \"Quick & Dirty\" method, may not be the best\n    this.option = this.router.url;\n  }\n  ngOnInit() {}\n  onLogin(loginForm) {\n    if (loginForm.invalid) {\n      return;\n    }\n    if (this.option === '/login') {\n      this.authservice.login(loginForm.value.enterusername, loginForm.value.enterpassword);\n    } else {\n      this.authservice.signup(loginForm.value.enterusername, loginForm.value.enterpassword);\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[3, \"submit\"], [\"loginForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"username\", \"ngModel\", \"\", \"name\", \"enteredUsername\", \"placeholder\", \"Username\", \"required\", \"\", \"pattern\", \"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\"], [\"enteredusername\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"name\", \"enteredPassword\", \"placeholder\", \"Password\", \"required\", \"\", \"minlength\", \"8\", \"pattern\", \"^([a-zA-Z0-9@*#]{8,15})$\"], [\"enteredpassword\", \"ngModel\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_0_listener() {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onLogin(_r0));\n        });\n        i0.ɵɵelement(2, \"input\", 2, 3);\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelement(5, \"br\")(6, \"input\", 5, 6);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        const _r3 = i0.ɵɵreference(7);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.option);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","authservice","router","option","url","ngOnInit","onLogin","loginForm","invalid","login","value","enterusername","enterpassword","signup","_","ɵɵdirectiveInject","i1","AuthServiceService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","LoginComponent_div_4_Template","LoginComponent_div_8_Template","ɵɵadvance","ɵɵproperty","_r1","dirty","touched","_r3","ɵɵtextInterpolate"],"sources":["C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\auth\\login\\login\\login.component.ts","C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\auth\\login\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthServiceService } from '../../auth-service.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    public option: string;\n\n    constructor(private authservice: AuthServiceService, private router: Router) {\n        // \"Quick & Dirty\" method, may not be the best\n        this.option = this.router.url;\n    }\n\n    ngOnInit(): void { }\n\n    onLogin(loginForm: NgForm): void {\n        if (loginForm.invalid) {\n            return;\n        }\n\n        if (this.option === '/login') {\n            this.authservice.login(loginForm.value.enterusername, loginForm.value.enterpassword);\n        } else {\n            this.authservice.signup(loginForm.value.enterusername, loginForm.value.enterpassword);\n        }\n    }\n}\n","<form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\n\n    <!-- Username Input -->\n    <input type=\"text\" \n           name=\"username\" \n           ngModel name=\"enteredUsername\" \n           placeholder=\"Username\"\n           required\n           pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n           #enteredusername=\"ngModel\">\n    <div *ngIf=\"enteredusername.invalid && (enteredusername.dirty || enteredusername.touched)\">\n      Invalid username\n    </div>\n  <br>\n    <!-- Password Input -->\n    <input type=\"password\" \n           name=\"password\" \n           ngModel name=\"enteredPassword\" \n           placeholder=\"Password\"\n           required\n           minlength=\"8\"\n           pattern=\"^([a-zA-Z0-9@*#]{8,15})$\"\n           #enteredpassword=\"ngModel\">\n    <div *ngIf=\"enteredpassword.invalid && (enteredpassword.dirty || enteredpassword.touched)\">\n      Invalid password\n    </div>\n  <br>\n    <button type=\"submit\">{{option}}</button>\n  </form>\n"],"mappings":";;;;;;;ICUIA,EAAA,CAAAC,cAAA,UAA2F;IACzFD,EAAA,CAAAE,MAAA,yBACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAWNH,EAAA,CAAAC,cAAA,UAA2F;IACzFD,EAAA,CAAAE,MAAA,yBACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADfV,OAAM,MAAOC,cAAc;EAIvBC,YAAoBC,WAA+B,EAAUC,MAAc;IAAvD,KAAAD,WAAW,GAAXA,WAAW;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAC/D;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,MAAM,CAACE,GAAG;EACjC;EAEAC,QAAQA,CAAA,GAAW;EAEnBC,OAAOA,CAACC,SAAiB;IACrB,IAAIA,SAAS,CAACC,OAAO,EAAE;MACnB;;IAGJ,IAAI,IAAI,CAACL,MAAM,KAAK,QAAQ,EAAE;MAC1B,IAAI,CAACF,WAAW,CAACQ,KAAK,CAACF,SAAS,CAACG,KAAK,CAACC,aAAa,EAAEJ,SAAS,CAACG,KAAK,CAACE,aAAa,CAAC;KACvF,MAAM;MACH,IAAI,CAACX,WAAW,CAACY,MAAM,CAACN,SAAS,CAACG,KAAK,CAACC,aAAa,EAAEJ,SAAS,CAACG,KAAK,CAACE,aAAa,CAAC;;EAE7F;EAAC,QAAAE,CAAA,G;qBArBQf,cAAc,EAAAJ,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAtB,EAAA,CAAAoB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdrB,cAAc;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCV3BhC,EAAA,CAAAC,cAAA,iBAAwD;QAAlDD,EAAA,CAAAkC,UAAA,oBAAAC,+CAAA;UAAAnC,EAAA,CAAAoC,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAtC,EAAA,CAAAuC,WAAA;UAAA,OAAUvC,EAAA,CAAAwC,WAAA,CAAAP,GAAA,CAAAtB,OAAA,CAAA2B,GAAA,CAAkB;QAAA,EAAC;QAG/BtC,EAAA,CAAAyC,SAAA,kBAMkC;QAClCzC,EAAA,CAAA0C,UAAA,IAAAC,6BAAA,iBAEM;QACR3C,EAAA,CAAAyC,SAAA,SAAI;QAUFzC,EAAA,CAAA0C,UAAA,IAAAE,6BAAA,iBAEM;QACR5C,EAAA,CAAAyC,SAAA,SAAI;QACFzC,EAAA,CAAAC,cAAA,iBAAsB;QAAAD,EAAA,CAAAE,MAAA,IAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;QAjBnCH,EAAA,CAAA6C,SAAA,GAAmF;QAAnF7C,EAAA,CAAA8C,UAAA,SAAAC,GAAA,CAAAlC,OAAA,KAAAkC,GAAA,CAAAC,KAAA,IAAAD,GAAA,CAAAE,OAAA,EAAmF;QAanFjD,EAAA,CAAA6C,SAAA,GAAmF;QAAnF7C,EAAA,CAAA8C,UAAA,SAAAI,GAAA,CAAArC,OAAA,KAAAqC,GAAA,CAAAF,KAAA,IAAAE,GAAA,CAAAD,OAAA,EAAmF;QAInEjD,EAAA,CAAA6C,SAAA,GAAU;QAAV7C,EAAA,CAAAmD,iBAAA,CAAAlB,GAAA,CAAAzB,MAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}