{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_4_div_1_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(2, LoginComponent_div_4_div_2_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1 == null ? null : _r1.errors == null ? null : _r1.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1 == null ? null : _r1.errors == null ? null : _r1.errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password should be at least 8 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid password format. Use only letters, numbers, and special characters (@, *, #).\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_8_div_1_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(2, LoginComponent_div_8_div_2_Template, 2, 0, \"div\", 4);\n    i0.ɵɵtemplate(3, LoginComponent_div_8_div_3_Template, 2, 0, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3 == null ? null : _r3.errors == null ? null : _r3.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3 == null ? null : _r3.errors == null ? null : _r3.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3 == null ? null : _r3.errors == null ? null : _r3.errors[\"pattern\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(authservice, router) {\n    this.authservice = authservice;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.formError = '';\n    this.option = this.router.url;\n  }\n  ngOnInit() {}\n  onLogin(loginForm) {\n    if (loginForm.invalid) {\n      this.formError = \"Please ensure the form is filled out correctly.\";\n      return;\n    }\n    this.formError = null;\n    let authObservable; // This will hold the observable for login/signup\n    if (this.option === '/login') {\n      authObservable = this.authservice.login(this.username, this.password);\n    } else {\n      authObservable = this.authservice.signup(this.username, this.password);\n    }\n    // Subscribing to handle the response\n    authObservable.subscribe(() => {\n      // This block handles successful login/signup\n      this.router.navigate(['/posts']); // redirecting to all posts\n    }, error => {\n      // This block handles errors\n      this.formError = \"An error occurred. Please try again.\";\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[3, \"submit\"], [\"loginForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"username\", \"placeholder\", \"Username\", \"required\", \"\", \"pattern\", \"^[\\\\w.-]+@([-a-zA-Z0-9]+\\\\.)+[a-zA-Z]{2,4}$\", 3, \"ngModel\", \"ngModelChange\"], [\"usernameRef\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", \"minlength\", \"8\", \"pattern\", \"^([a-zA-Z0-9@*#]{8,15})$\", 3, \"ngModel\", \"ngModelChange\"], [\"passwordRef\", \"ngModel\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_0_listener() {\n          i0.ɵɵrestoreView(_r10);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onLogin(_r0));\n        });\n        i0.ɵɵelementStart(2, \"input\", 2, 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 3, 2, \"div\", 4);\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"input\", 5, 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 4, 3, \"div\", 4);\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        const _r3 = i0.ɵɵreference(7);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (_r1 == null ? null : _r1.invalid) && ((_r1 == null ? null : _r1.dirty) || (_r1 == null ? null : _r1.touched)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (_r3 == null ? null : _r3.invalid) && ((_r3 == null ? null : _r3.dirty) || (_r3 == null ? null : _r3.touched)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.option);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_4_div_1_Template","LoginComponent_div_4_div_2_Template","ɵɵadvance","ɵɵproperty","_r1","errors","LoginComponent_div_8_div_1_Template","LoginComponent_div_8_div_2_Template","LoginComponent_div_8_div_3_Template","_r3","LoginComponent","constructor","authservice","router","username","password","formError","option","url","ngOnInit","onLogin","loginForm","invalid","authObservable","login","signup","subscribe","navigate","error","_","ɵɵdirectiveInject","i1","AuthServiceService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r10","_r0","ɵɵreference","ɵɵresetView","LoginComponent_Template_input_ngModelChange_2_listener","$event","LoginComponent_div_4_Template","ɵɵelement","LoginComponent_Template_input_ngModelChange_6_listener","LoginComponent_div_8_Template","dirty","touched","ɵɵtextInterpolate"],"sources":["C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\auth\\login\\login\\login.component.ts","C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\auth\\login\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthServiceService } from '../../auth-service.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public option: string;\n  public username: string = '';  \n  public password: string = '';  \n  public formError: string | null = '';  \n\n  constructor(private authservice: AuthServiceService, private router: Router) {\n      this.option = this.router.url;\n  }\n\n  ngOnInit(): void { }\n\n  onLogin(loginForm: NgForm): void {\n      if (loginForm.invalid) {\n          this.formError = \"Please ensure the form is filled out correctly.\";\n          return;\n      }\n\n      this.formError = null;  \n      \n      let authObservable; // This will hold the observable for login/signup\n      if (this.option === '/login') {\n          authObservable = this.authservice.login(this.username, this.password);\n      } else {\n          authObservable = this.authservice.signup(this.username, this.password);\n      }\n\n      // Subscribing to handle the response\n      authObservable.subscribe(\n          () => { \n              // This block handles successful login/signup\n              this.router.navigate(['/posts']); // redirecting to all posts\n          },\n          error => {\n              // This block handles errors\n              this.formError = \"An error occurred. Please try again.\";\n          }\n      );\n  }\n}\n","<form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\n\n    <!-- Username Input -->\n    <input type=\"text\" \n           name=\"username\" \n           [(ngModel)]=\"username\" \n           placeholder=\"Username\"\n           required\n           pattern=\"^[\\w.-]+@([-a-zA-Z0-9]+\\.)+[a-zA-Z]{2,4}$\"\n           #usernameRef=\"ngModel\"/>\n           <div *ngIf=\"usernameRef?.invalid && (usernameRef?.dirty || usernameRef?.touched)\">\n            <div *ngIf=\"usernameRef?.errors?.['required']\">Username is required.</div>\n            <div *ngIf=\"usernameRef?.errors?.['pattern']\">Invalid email format.</div>\n        </div>\n    <br>\n\n    <!-- Password Input -->\n    <input type=\"password\" \n           name=\"password\" \n           [(ngModel)]=\"password\" \n           placeholder=\"Password\"\n           required\n           minlength=\"8\"\n           pattern=\"^([a-zA-Z0-9@*#]{8,15})$\"\n           #passwordRef=\"ngModel\"/>\n           <div *ngIf=\"passwordRef?.invalid && (passwordRef?.dirty || passwordRef?.touched)\">\n            <div *ngIf=\"passwordRef?.errors?.['required']\">Password is required.</div>\n            <div *ngIf=\"passwordRef?.errors?.['minlength']\">Password should be at least 8 characters long.</div>\n            <div *ngIf=\"passwordRef?.errors?.['pattern']\">Invalid password format. Use only letters, numbers, and special characters (@, *, #).</div>\n        </div>\n    <br>\n\n    <button type=\"submit\">{{option}}</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}