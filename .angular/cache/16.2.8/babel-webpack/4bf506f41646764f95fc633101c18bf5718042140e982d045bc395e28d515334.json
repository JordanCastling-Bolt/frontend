{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../auth-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authservice, router) {\n    this.authservice = authservice;\n    this.router = router;\n    // \"Quick & Dirty\" method, may not be the best\n    this.option = this.router.url;\n  }\n  ngOnInit() {}\n  onLogin(loginForm) {\n    if (loginForm.invalid) {\n      return;\n    }\n    if (this.option === '/login') {\n      this.authservice.login(loginForm.value.enterusername, loginForm.value.enterpassword);\n    } else {\n      this.authservice.signup(loginForm.value.enterusername, loginForm.value.enterpassword);\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[3, \"submit\"], [\"loginForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"enterusername\", \"placeholder\", \"Username\", \"ngModel\", \"\", \"name\", \"username\", \"required\", \"\", \"pattern\", \"^[a-zA-Z0-9\\\\-\\\\_\\\\.]{1,}$\"], [\"type\", \"password\", \"name\", \"enterpassword\", \"placeholder\", \"Password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"pattern\", \"^([a-zA-Z0-9@#$%!&]{8,15})$\"], [\"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onLogin(_r0));\n        });\n        i0.ɵɵelement(2, \"input\", 2)(3, \"input\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.option);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","authservice","router","option","url","ngOnInit","onLogin","loginForm","invalid","login","value","enterusername","enterpassword","signup","_","i0","ɵɵdirectiveInject","i1","AuthServiceService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_submit_0_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\auth\\login\\login\\login.component.ts","C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\auth\\login\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthServiceService } from '../../auth-service.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    public option: string;\n\n    constructor(private authservice: AuthServiceService, private router: Router) {\n        // \"Quick & Dirty\" method, may not be the best\n        this.option = this.router.url;\n    }\n\n    ngOnInit(): void { }\n\n    onLogin(loginForm: NgForm): void {\n        if (loginForm.invalid) {\n            return;\n        }\n\n        if (this.option === '/login') {\n            this.authservice.login(loginForm.value.enterusername, loginForm.value.enterpassword);\n        } else {\n            this.authservice.signup(loginForm.value.enterusername, loginForm.value.enterpassword);\n        }\n    }\n}\n","<!-- This is an HTML comment -->\n<form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\n    <input type=\"text\" \n           name=\"enterusername\" \n           placeholder=\"Username\" \n           ngModel name=\"username\" \n           required\n           pattern=\"^[a-zA-Z0-9\\-\\_\\.]{1,}$\">\n    <input type=\"password\" \n           name=\"enterpassword\" \n           placeholder=\"Password\" \n           ngModel name=\"password\" \n           required\n           pattern=\"^([a-zA-Z0-9@#$%!&]{8,15})$\">\n    <button type=\"submit\">{{option}}</button>\n</form>\n"],"mappings":";;;;AAUA,OAAM,MAAOA,cAAc;EAIvBC,YAAoBC,WAA+B,EAAUC,MAAc;IAAvD,KAAAD,WAAW,GAAXA,WAAW;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAC/D;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,MAAM,CAACE,GAAG;EACjC;EAEAC,QAAQA,CAAA,GAAW;EAEnBC,OAAOA,CAACC,SAAiB;IACrB,IAAIA,SAAS,CAACC,OAAO,EAAE;MACnB;;IAGJ,IAAI,IAAI,CAACL,MAAM,KAAK,QAAQ,EAAE;MAC1B,IAAI,CAACF,WAAW,CAACQ,KAAK,CAACF,SAAS,CAACG,KAAK,CAACC,aAAa,EAAEJ,SAAS,CAACG,KAAK,CAACE,aAAa,CAAC;KACvF,MAAM;MACH,IAAI,CAACX,WAAW,CAACY,MAAM,CAACN,SAAS,CAACG,KAAK,CAACC,aAAa,EAAEJ,SAAS,CAACG,KAAK,CAACE,aAAa,CAAC;;EAE7F;EAAC,QAAAE,CAAA,G;qBArBQf,cAAc,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdtB,cAAc;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCT3Bb,EAAA,CAAAe,cAAA,iBAAwD;QAAlDf,EAAA,CAAAgB,UAAA,oBAAAC,+CAAA;UAAAjB,EAAA,CAAAkB,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAApB,EAAA,CAAAqB,WAAA;UAAA,OAAUrB,EAAA,CAAAsB,WAAA,CAAAR,GAAA,CAAAvB,OAAA,CAAA6B,GAAA,CAAkB;QAAA,EAAC;QAC/BpB,EAAA,CAAAuB,SAAA,eAKyC;QAOzCvB,EAAA,CAAAe,cAAA,gBAAsB;QAAAf,EAAA,CAAAwB,MAAA,GAAU;QAAAxB,EAAA,CAAAyB,YAAA,EAAS;;;QAAnBzB,EAAA,CAAA0B,SAAA,GAAU;QAAV1B,EAAA,CAAA2B,iBAAA,CAAAb,GAAA,CAAA1B,MAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}