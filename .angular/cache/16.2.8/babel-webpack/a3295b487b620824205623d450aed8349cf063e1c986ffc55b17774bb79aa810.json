{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(username, userpassword) {\n    const authData = {\n      username: username,\n      password: userpassword\n    };\n    this.http.post('https://localhost:3000/api/users/signup', authData).subscribe(response => {\n      const token = response.token;\n      this.token = token;\n    });\n  }\n  login(username, userpassword) {\n    const authData = {\n      username: username,\n      password: userpassword\n    };\n    this.http.post('https://localhost:3000/api/users/login', authData).subscribe(response => {\n      const token = response.token;\n      this.token = token;\n    });\n  }\n  getToken() {\n    return this.token;\n  }\n  static #_ = this.ɵfac = function AuthServiceService_Factory(t) {\n    return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthServiceService,\n    factory: AuthServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthServiceService","constructor","http","signup","username","userpassword","authData","password","post","subscribe","response","token","login","getToken","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\auth\\auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  private token!: string;\n\n  constructor(private http: HttpClient) { }\n\n  signup(username: string, userpassword: string) {\n    const authData = {\n      username: username,\n      password: userpassword\n    };\n\n    this.http.post<{token: string}>('https://localhost:3000/api/users/signup', authData)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n      });\n  }\n\n  login(username: string, userpassword: string) {\n    const authData = {\n      username: username,\n      password: userpassword\n    };\n\n    this.http.post<{token: string}>('https://localhost:3000/api/users/login', authData)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n      });\n  }\n\n  getToken() {\n    return this.token;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAMA,CAACC,QAAgB,EAAEC,YAAoB;IAC3C,MAAMC,QAAQ,GAAG;MACfF,QAAQ,EAAEA,QAAQ;MAClBG,QAAQ,EAAEF;KACX;IAED,IAAI,CAACH,IAAI,CAACM,IAAI,CAAkB,yCAAyC,EAAEF,QAAQ,CAAC,CACjFG,SAAS,CAACC,QAAQ,IAAG;MACpB,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACN;EAEAC,KAAKA,CAACR,QAAgB,EAAEC,YAAoB;IAC1C,MAAMC,QAAQ,GAAG;MACfF,QAAQ,EAAEA,QAAQ;MAClBG,QAAQ,EAAEF;KACX;IAED,IAAI,CAACH,IAAI,CAACM,IAAI,CAAkB,wCAAwC,EAAEF,QAAQ,CAAC,CAChFG,SAAS,CAACC,QAAQ,IAAG;MACpB,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5B,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACN;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EAAC,QAAAG,CAAA,G;qBAlCUd,kBAAkB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBnB,kBAAkB;IAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}