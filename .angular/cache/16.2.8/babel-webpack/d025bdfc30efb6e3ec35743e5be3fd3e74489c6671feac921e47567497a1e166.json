{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PostsService {\n  constructor(http) {\n    this.http = http;\n  }\n  addPost_Service(postId, postName) {\n    this.http.post('http://localhost:3000/api/posts', {\n      id: postId,\n      name: postName\n    }).subscribe(response => {\n      console.log(response);\n    });\n  }\n  static #_ = this.ɵfac = function PostsService_Factory(t) {\n    return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostsService,\n    factory: PostsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PostsService","constructor","http","addPost_Service","postId","postName","post","id","name","subscribe","response","console","log","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Jordan\\Documents\\GitHub\\frontend\\src\\app\\posts\\posts-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private http: HttpClient) { }\n\n  addPost_Service(postId: string, postName: string) {\n    this.http.post('http://localhost:3000/api/posts', {id: postId, name: postName})\n      .subscribe(response => {\n        console.log(response);\n      });\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,eAAeA,CAACC,MAAc,EAAEC,QAAgB;IAC9C,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,iCAAiC,EAAE;MAACC,EAAE,EAAEH,MAAM;MAAEI,IAAI,EAAEH;IAAQ,CAAC,CAAC,CAC5EI,SAAS,CAACC,QAAQ,IAAG;MACpBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;EACN;EAAC,QAAAG,CAAA,G;qBATUb,YAAY,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZlB,YAAY;IAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}